{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAe1BF,KAAKG,iBAAiB,UAE3B,SAA6BC,GAC3BA,EAAIC,iBACJ,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAIM,cAAcC,SAClD,IAAIC,EAAQ,EAEZC,YAAW,KACTC,aAAY,KApBhB,IAAuBC,EAAUT,EAqBvBG,EAAOO,OAASJ,IArBHG,EAsBDH,EAtBWN,EAsBJC,EAAMS,MArB1B,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUT,IAEpBa,EAAO,C,SAAEJ,E,MAAUT,GAAQ,KAgBtBgB,MAAK,EAACP,SAAEA,EAAQT,MAAEA,MACjBR,EAAAyB,OAAOC,QAAQ,uBAAqBT,QAAiBT,MAAW,CAC5DmB,QAAO,KACT,IAEHC,OAAM,EAACX,SAAEA,EAAQT,MAAEA,MAClBR,EAAAyB,OAAOC,QAAQ,sBAAoBT,QAAeT,MAAW,CAC3DmB,QAAS,KACT,IAGRb,GAAO,GACNJ,EAAKQ,MAAM,GACbT,EAAMS,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay }); // Fulfill\n    } else {\n      reject({ position, delay }); // Reject\n    }\n  });\n}\n\nrefs.form.addEventListener('submit', hendleEventOnSubmit);\n\nfunction hendleEventOnSubmit(eve) {\n  eve.preventDefault();\n  const { delay, step, amount } = eve.currentTarget.elements;\n  let count = 1;\n\n  setTimeout(() => {\n    setInterval(() => {\n      if (amount.value >= count) {\n        createPromise(count, delay.value)\n          .then(({ position, delay }) => {\n            Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n              timeout: 5000,\n            });\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n              timeout: 5000,\n            });\n          });\n      }\n      count++;\n    }, step.value);\n  }, delay.value);\n}\n"],"names":["$iQIUW","parcelRequire","form","document","querySelector","addEventListener","eve","preventDefault","delay","delay1","step","amount","currentTarget","elements","count","setTimeout","setInterval","position","value","Promise","resolve","reject","Math","random","then","Notify","failure","timeout","catch"],"version":3,"file":"03-promises.c45adaf9.js.map"}