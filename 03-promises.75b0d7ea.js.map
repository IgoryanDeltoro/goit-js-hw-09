{"mappings":"YAQA,IAAMA,EAAc,SAACC,EAAMC,GACzB,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,W,OAAMD,EAAQH,E,GAAOC,E,KAI9BI,EAAWN,EAAY,iBAAkB,KACzCO,EAAWP,EAAY,iBAAkB,KAE/CG,QAAQK,IAAI,CAACF,EAAUC,IACpBE,MAAK,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAC1BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nconst makePromise = (text, delay) => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(text), delay);\n  });\n};\n\nconst promiseA = makePromise('promiseA value', 1000);\nconst promiseB = makePromise('promiseB value', 3000);\n\nPromise.all([promiseA, promiseB])\n  .then(value => console.log(value)) // \"promiseA value\"\n  .catch(error => console.log(error));\n"],"names":["$ce04d3a99e08e73b$var$makePromise","text","delay","Promise","resolve","setTimeout","$ce04d3a99e08e73b$var$promiseA","$ce04d3a99e08e73b$var$promiseB","all","then","value","console","log","catch","error"],"version":3,"file":"03-promises.75b0d7ea.js.map"}