{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAe1BF,KAAKG,iBAAiB,UAE3B,SAA6BC,GAC3BA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OACjBC,EAAQ,EAEZC,YAAW,WACTC,aAAY,WApBhB,IAAuBC,EAAUN,EAqBvBE,EAAOK,OAASJ,IArBHG,EAsBDH,EAtBWH,EAsBJD,EAAMQ,MArB1B,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUN,UAEpBU,EAAO,CAAEJ,WAAUN,S,KAgBda,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MACjBZ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANjB,EAAM,MAAK,CAC9DkB,QAAO,K,IAGZC,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUN,EAAKc,EAALd,MAClBZ,EAAA2B,OAAOC,QAAQ,sBAAqCC,OAAfX,EAAS,QAAYW,OAANjB,EAAM,MAAK,CAC7DkB,QAAS,K,IAIjBf,G,GACCF,EAAKM,M,GACPR,EAAMQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay }); // Fulfill\n    } else {\n      reject({ position, delay }); // Reject\n    }\n  });\n}\n\nrefs.form.addEventListener('submit', hendleEventOnSubmit);\n\nfunction hendleEventOnSubmit(eve) {\n  eve.preventDefault();\n  const { delay, step, amount } = eve.currentTarget.elements;\n  let count = 1;\n\n  setTimeout(() => {\n    setInterval(() => {\n      if (amount.value >= count) {\n        createPromise(count, delay.value)\n          .then(({ position, delay }) => {\n            Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n              timeout: 5000,\n            });\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n              timeout: 5000,\n            });\n          });\n      }\n      count++;\n    }, step.value);\n  }, delay.value);\n}\n"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","eve","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","count","setTimeout","setInterval","position","value","Promise","resolve","reject","Math","random","then","param","Notify","failure","concat","timeout","catch"],"version":3,"file":"03-promises.7f834fb4.js.map"}